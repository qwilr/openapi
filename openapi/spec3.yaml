openapi: 3.0.2
info:
  version: 1.0.0
  title: API Reference
  termsOfService: 'https://qwilr.com/terms/'
  contact:
    email: api@qwilr.com
    url: 'http://qwilr.com'
  license:
    name: Qwilr License
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  x-logo:
    url: 'https://qwilr.com/wp-content/uploads/2019/10/qwilr-logo-dark.png'
  description: >
    ## Introduction


    Welcome to the Qwilr Public API documentation. With our API you'll be

    able to generate Qwilr Pages programmatically. This means you can

    generate custom quotes, create pages when someone fills out a form,

    or anything else. The sky is the limit.


    Our API is organized around
    [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer).

    All calls made are live. If you need to test outside of your live account,

    get in touch with our team for options around that.


    If you're looking for help with the Qwilr app you can find that in our

    [help documentation](https://help.qwilr.com/).


    If you have any questions about our API, please get in touch at

    [help@qwilr.com](mailto:help@qwilr.com).
externalDocs:
  description: Sign up for Qwilr
  url: 'https://qwilr.com/signup/'
tags:
  - name: Pages
    description: |
      Page objects correspond to pages in the Qwilr UI, allowing for the
      creation of a public-facing Qwilr Page. The Qwilr API allows you to
      create, delete and replace your Pages by sending through JSON objects.
  - name: Blocks
    description: >
      Block objects correspond to blocks in the Qwilr UI. Pages and templates
      are

      composed of a series of blocks. The Qwilr API allows you to get saved
      blocks

      from your account.
  - name: Subscriptions
    description: >
      Webhooks allow you to subscribe and unsubscribe from events on your Qwilr
      account.
servers:
  - url: 'https://api.qwilr.com/v1'
    description: Production server (uses live data)
security:
  - bearerAuth: []
paths:
  /pages:
    post:
      summary: Create a page
      description: Creates a page from saved blocks or template.
      tags:
        - Pages
      operationId: createPage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                name:
                  type: string
                  description: 'Title of the page, visible as the browser title.'
                published:
                  type: boolean
                  description: >-
                    False will prevent page the from being viewed publicly, True
                    will allow it to be viewed publicly.
                substitutions:
                  $ref: '#/components/schemas/Substitutions'
                metadata:
                  $ref: '#/components/schemas/Metadata'
                tags:
                  type: array
                  description: >-
                    These tags to be applied to your page. Tags are
                    case-sensitive.
                  items:
                    type: string
              oneOf:
                - title: Saved Blocks
                  properties:
                    blocks:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            $ref: '#/components/schemas/SavedBlockId'
                          foldable:
                            type: object
                            description: >-
                              Foldable settings for the block. Folding is only
                              possible with non Quote block types. Don't set
                              this field for your Quote block.
                            properties:
                              enabled:
                                type: boolean
                                default: false
                                description: >-
                                  The block has fold/unfold button shown if the
                                  property is true, otherwise ability to
                                  fold/unfold is disabled.
                              isFolded:
                                type: boolean
                                default: false
                                description: >-
                                  The block is folded by default if the property
                                  is true, otherwise it's expanded.
                              label:
                                type: string
                                default: Show / Hide
                                description: The label shown when folding is enabled.
                            required:
                              - enabled
                          quoteSettings:
                            x-status: beta
                            $ref: '#/components/schemas/QuoteSettings'
                          quoteSections:
                            type: array
                            x-status: beta
                            description: >-
                              An array of sections in a saved Quote block. Only
                              relevant if you want to customise your quote
                              block. Ignore this field for non Quote block
                              types.
                            maxItems: 100
                            items:
                              $ref: '#/components/schemas/QuoteSection'
                  required:
                    - blocks
                - title: Template
                  properties:
                    templateId:
                      $ref: '#/components/schemas/ObjectId'
                  required:
                    - templateId
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /blocks/saved:
    get:
      summary: Get saved blocks
      description: >-
        Allows you to retrieve a list of saved blocks from your account, with
        block names. Useful in developer workflow for mapping block names to
        saved block IDs.
      tags:
        - Blocks
      operationId: getSavedBlocks
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SavedBlock'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/pages/{pageId}':
    get:
      summary: Get a page
      description: Returns a page
      tags:
        - Pages
      operationId: getPage
      parameters:
        - name: pageId
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/ObjectId'
        - name: expand
          in: query
          style: form
          explode: false
          allowReserved: true
          schema:
            type: array
            items:
              type: string
              enum:
                - metadata
                - acceptance
                - previewAcceptance
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    put:
      summary: Update page
      description: Allows you to update the `published` property.
      tags:
        - Pages
      operationId: updatePage
      parameters:
        - name: pageId
          required: true
          in: path
          schema:
            $ref: '#/components/schemas/ObjectId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              properties:
                published:
                  type: boolean
              additionalProperties: false
      responses:
        '200':
          description: The page has been successfully updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /webhooks:
    get:
      summary: Get a list of all webhook subscriptions
      description: >-
        Allows you to retrieve a list of all the webhook subscriptions that you
        have created using the create webhook subscription endpoint.
      tags:
        - Subscriptions
      operationId: getSubscriptions
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
    post:
      summary: Create a webhook event subscription
      description: >-
        Creates a new webhook subscription to an event type. New events will be
        sent to the defined `targetUrl`. You should store the `id` field
        returned in case you want to cancel the subscription later on.
      tags:
        - Subscriptions
      operationId: subscribeToNotification
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event:
                  $ref: '#/components/schemas/EventType'
                targetUrl:
                  type: string
              required:
                - event
                - targetUrl
      callbacks:
        pageAccepted:
          '{$request.body#/targetUrl}':
            post:
              summary: pageAccepted
              requestBody:
                description: Webhook callback that fires when a page is accepted
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        event:
                          type: string
                          enum:
                            - pageAccepted
                        page:
                          type: object
                          properties:
                            id:
                              $ref: '#/components/schemas/ObjectId'
                            metadata:
                              $ref: '#/components/schemas/Metadata'
                          required:
                            - id
                      required:
                        - event
                        - page
              responses:
                '200':
                  description: Return this if your server accepts the callback
                '410':
                  description: Return this if you want to unsubscribe from the callback
        pagePreviewAccepted:
          '{$request.body#/targetUrl}':
            post:
              summary: pagePreviewAccepted
              requestBody:
                description: >-
                  Webhook callback that fires when a page is 'accepted' when 
                  [previewing the acceptance
                  process](https://help.qwilr.com/article/175-getting-documents-accepted#process).
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        event:
                          type: string
                          enum:
                            - pagePreviewAccepted
                        page:
                          type: object
                          properties:
                            id:
                              $ref: '#/components/schemas/ObjectId'
                            metadata:
                              $ref: '#/components/schemas/Metadata'
                          required:
                            - id
                      required:
                        - event
                        - page
              responses:
                '200':
                  description: Return this if your server accepts the callback
                '410':
                  description: Return this if you want to unsubscribe from the callback
      responses:
        '201':
          description: Subscribed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/webhooks/{subscriptionId}':
    delete:
      summary: Cancel a webhook event subscription
      description: >-
        Cancels a webhook event subscription using the `id` field that was
        returned when the webhook subscription was created.
      tags:
        - Subscriptions
      operationId: unsubscribeToNotification
      parameters:
        - name: subscriptionId
          description: The id returned when your subscription was created
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: Unsubscribed
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '422':
          $ref: '#/components/responses/UnprocessableEntity'
        '429':
          $ref: '#/components/responses/TooManyRequests'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: >
        All requests to API need to be authenticated with your account's access
        token. You can find

        your access token in the [Qwilr API
        Settings](https://app.qwilr.com/#/settings/api):


        Your access token allows anyone to access your Qwilr Pages and account.
        Be sure to keep it

        secret! Do not share your secret access tokens in any public spaces such
        as your source

        repository, client-side code, and so forth.


        **When making a request:**


        - Use your access token with bearer authentication in the headers.

        For example: `Authorization: Bearer fakeaccesstoken`

        - Send all requests over [HTTPS](https://en.wikipedia.org/wiki/HTTPS)
  schemas:
    SavedBlockId:
      type: string
      pattern: '^[a-zA-Z0-9_-]{30}$'
      title: SavedBlockId
      example: uCHq6B6_S1EqZ2pyam8YVfUldvoF-Q
    Discount:
      type: object
      properties:
        type:
          type: string
          enum:
            - fixed
            - percentage
        amount:
          type: number
          minimum: 0
      required:
        - type
        - amount
      additionalProperties: false
    QuoteSettings:
      type: object
      description: >-
        Settings for the quote block. Only relevant if you want to customise
        your quote block. Ignore this field for non Quote block types.
      properties:
        selectionType:
          type: string
          description: The type of quote
          enum:
            - single
            - multi
            - combined
          default: combined
        selectionRequired:
          type: boolean
          description: >-
            If quote selection is enabled, this specifies if a selection must be
            made (default: false)
        showTotalDiscount:
          type: boolean
          description: 'Whether the total discount is shown (default: false)'
        showTaxTotals:
          type: boolean
          description: 'Whether the total tax is shown (default: false)'
        showTotalExcludingTax:
          type: boolean
          description: 'Whether the total amount excluding tax is shown (default: false)'
        quoteDiscount:
          description: The discount to apply to the total quote price
          $ref: '#/components/schemas/Discount'
      additionalProperties: false
    Text:
      type: string
      maxLength: 30000
    Metadata:
      type: object
      description: 'Data you provide, that will be returned as part of all Webhooks.'
      maxProperties: 500
      additionalProperties:
        maxLength: 500
        type: string
    FixedCostLineItem:
      title: Fixed cost line item
      type: object
      description: 'A fixed cost line item, with a description and pricing information'
      properties:
        type:
          type: string
          description: The type of line item
          enum:
            - fixedCost
        description:
          description: The text description of the line item
          $ref: '#/components/schemas/Text'
        unitPrice:
          type: number
          description: The per unit price of the line item
        unitLabel:
          type: string
          description: The per unit label of the line item
          maxLength: 200
        quantity:
          type: number
          description: The quantity of the line item
          minimum: 0
        quantityRange:
          type: object
          description: >-
            A range your client can choose the quantity from (when you don't
            want to provide a fixed quantity). This field is optional
          properties:
            min:
              type: number
            max:
              type: number
          required:
            - min
            - max
        taxExempt:
          type: boolean
          description: 'Whether the line item is exempt from tax (default: false)'
        optional:
          type: boolean
          description: 'Whether the line item is optional (default: false)'
        selected:
          type: boolean
          description: >-
            Whether an optional line item is selected by default (default:
            false)
        lineItemDiscount:
          description: The discount to apply to the total line item price
          $ref: '#/components/schemas/Discount'
        metadata:
          description: Customer's metadata sent along with the request
          $ref: '#/components/schemas/Metadata'
      required:
        - type
        - description
      additionalProperties: false
    TextLineItem:
      title: Text line item
      type: object
      description: 'A text line item, with a description'
      properties:
        type:
          type: string
          description: The type of line item
          enum:
            - text
        description:
          description: The text description of the line item
          $ref: '#/components/schemas/Text'
        metadata:
          description: Customer's metadata sent along with the request
          $ref: '#/components/schemas/Metadata'
      required:
        - type
        - description
      additionalProperties: false
    QuoteSection:
      type: object
      description: A Quote section containing a group of line items
      properties:
        description:
          description: The text description of the section
          $ref: '#/components/schemas/Text'
        lineItems:
          type: array
          description: An array of line items for the section
          maxItems: 1000
          items:
            oneOf:
              - $ref: '#/components/schemas/FixedCostLineItem'
              - $ref: '#/components/schemas/TextLineItem'
        settings:
          type: object
          properties:
            showSubtotal:
              type: boolean
              description: 'Whether the subtotal amount is shown or not (default: true)'
            showUnitPrice:
              type: boolean
              description: 'Whether or not to show the unit price column (default: true)'
            showQuantity:
              type: boolean
              description: 'Whether or not to show the quantity column (default: true)'
            showCost:
              type: boolean
              description: 'Whether or not to show the cost column (default: true)'
            selected:
              type: boolean
              description: >-
                Whether the quote section is pre-selected (default: false). Only
                relevant when the quote's selectionType is 'multi' or 'single'
            selectionRequired:
              type: boolean
              description: >-
                Whether this quote section must be selected (default: false).
                Only relevant when the quote's selectionType is 'multi' or
                'single'
            sectionDiscount:
              description: The discount to apply to the total section price
              $ref: '#/components/schemas/Discount'
        metadata:
          description: Customer's metadata sent along with the request
          $ref: '#/components/schemas/Metadata'
      additionalProperties: false
    ObjectId:
      type: string
      pattern: '^[a-z0-9]{24}$'
      title: Id
      example: 6ee0f841f3cc8900090d82dc
    Substitutions:
      type: object
      description: Mapping of token API reference keys to substitution values.
      example:
        example_token_key: Example value
      additionalProperties:
        oneOf:
          - type: string
            description: A text substitution. Replaces the token with a plain text value.
          - type: array
            description: >-
              A repeating token substitution. Content is repeated for each entry
              in the array.
            items:
              type: object
              additionalProperties:
                type: string
    Acceptance:
      type: object
      nullable: true
      properties:
        acceptersTotal:
          type: integer
        acceptersCount:
          type: integer
        accepters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              legalEntity:
                type: string
              esigned:
                type: boolean
              acceptedAt:
                type: string
            required:
              - name
              - email
              - legalEntity
              - esigned
              - acceptedAt
        quote:
          type: object
          properties:
            amount:
              type: number
            amountExcludingTax:
              type: number
            quoteSections:
              type: array
              items:
                type: object
                properties:
                  selected:
                    type: boolean
                  metadata:
                    type: object
                    nullable: true
                  lineItems:
                    type: array
                    items:
                      oneOf:
                        - title: Text line item
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - text
                            metadata:
                              type: object
                              nullable: true
                          required:
                            - type
                        - title: Fixed cost line item
                          type: object
                          properties:
                            type:
                              type: string
                              enum:
                                - fixedCost
                            unitPrice:
                              type: number
                            quantity:
                              type: number
                            selected:
                              type: boolean
                            metadata:
                              type: object
                              nullable: true
                          required:
                            - type
                            - unitPrice
                            - quantity
                            - selected
                required:
                  - selected
                  - lineItems
          required:
            - amount
            - amountExcludingTax
            - quoteSections
      required:
        - acceptersTotal
        - acceptersCount
        - accepters
      additionalProperties: false
    Page:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        name:
          type: string
          example: Page Name
        status:
          type: string
          enum:
            - draft
            - live
            - accepting
            - accepted
            - disabled
        tags:
          type: array
          items:
            type: string
        metadata:
          type: object
          nullable: true
        links:
          type: object
          properties:
            editorUrl:
              type: string
            publicUrl:
              type: string
            pdfUrl:
              type: string
          required:
            - editorUrl
            - publicUrl
            - pdfUrl
        acceptance:
          $ref: '#/components/schemas/Acceptance'
        previewAcceptance:
          $ref: '#/components/schemas/Acceptance'
      required:
        - id
        - name
        - status
        - tags
        - links
      additionalProperties: false
    Error:
      description: Response error
      properties:
        code:
          type: number
        message:
          type: string
      required:
        - code
        - message
    SavedBlock:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
          example: Saved block name
      additionalProperties: false
    EventType:
      type: string
      enum:
        - pageAccepted
        - pagePreviewAccepted
      example: pageAccepted
    Webhook:
      type: object
      properties:
        id:
          type: string
        event:
          $ref: '#/components/schemas/EventType'
        url:
          type: string
  responses:
    BadRequest:
      description: Request has malformed data or invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized access to a resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: No permission to access a resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    UnprocessableEntity:
      description: Entity has not passed validation
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    TooManyRequests:
      description: Too many requests
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
